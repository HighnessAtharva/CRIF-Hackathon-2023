Article,Title,Description,URL,Content,Published,Headline,Headline Sentiment,Offense Rating,Negative Words,Offensive Words,Tags
1,Save 97% off the 2023 Solidity & Flutter Developer Bundle,"Expert developer Rahul Agarwal will take you through six courses to help you create cross-platform apps in the Solidity and Flutter space. Save over $1,350 off the normal cost as well. Read more...",https://www.neowin.net/deals/save-97-off-the-2023-solidity--flutter-developer-bundle/,Todays highlighted deal comes via our Online Courses section of the Neowin Deals store where you can save 97 off the 2023 Solidity Flutter Developer Bundle. This bundle includes the following courses JobReady Flutter Complete Course with Firebase Dart Master the Art of Building CrossPlatform Application Using Flutter Firebase Build a Decentralized Todo Application Using Solidity React Master the Art of Building Web3 Application Using Solidity Hardhat Ethers React Learn to Create Sell Your Own NFT Using Solidity Create Your Own NFT from Scratch Using Solidity Hardhat OpenZeppelin Alchemy Build a Basic Chat App Using Flutter Firebase Learn to Implement All the Concepts of Flutter Firebase Android iOS Build a Decentralized Library Management with Solidity Next JS Rahul Agarwal 16 Lessons 2h Build a Full Stack NFT Marketplace Using Solidity Next JS Rahul Agarwal 26 Lessons 1h Heres the deal This 2023 Solidity Flutter Developer Bundle normally costs 1200 but you can pick it up for just 24. 99 for a limited time that represents a saving of 1375. 01 97 off. For a full description specs and instructor info click the link below. 2023 Solidity Flutter Developer Bundle for just 24. 99 More Neowin Deals. We post these because we earn commission on each sale so as not to rely solely on advertising which many of our readers block. It all helps toward paying staff reporters servers and hosting costs. Other ways to support Neowin The above deal not doing it for you but still want to help Check out the links below. Check out our partner software in the Neowin Store Buy a Tshirt at Neowins Threadsquad Subscribe to Neowin for 14 a year or 28 a year for an adfree experience Disclosure An account at Neowin Deals is required to participate in any deals powered by our affiliate StackCommerce. For a full description of StackCommerces privacy guidelines go here. Neowin benefits from shared revenue of each sale made through our branded deals site.,2022-12-31T18:00:01Z,No Headline,Extremely Negative,310,"['slug', 'slug', 'slug', 'Invalid', 'slug', 'Invalid', 'stale', 'slug', 'slug', 'slug', 'slug', 'slug']",[],[]
2,Upload Files from Google Drive to Google Cloud Storage with Google Apps Script,This tutorial describes how you can upload files and folders from your Google Drive to a bucket in Google Cloud Storage using Google Apps Script.,https://www.labnol.org/code/20074-upload-files-to-google-cloud-storage,Upload Files from Google Drive to Google Cloud Storage with Google Apps Script This tutorial describes how you can upload files and folders from your Google Drive to a bucket in Google Cloud Storage using Google Apps Script. This tutorial describes how you can upload files and folders from your Google Drive to a bucket in Google Cloud Storage using Google Apps Script. You can even set up a timebased trigger like a cron job that watches a folder in your Google Drive and automatically upload new incoming files to Google Cloud Storage. The same technique can also be used to upload files from Google Drive to Firebase Storage. Create Google Cloud Storage Bucket To get started go to console. cloud. google. comprojectcreate and create a new Google Cloud Project. Once the project has been added go to console. cloud. google. comstoragecreatebucket and create a new bucket. Give your bucket a unique name and select the region where you want to store your data. If the files you are uploading are private and you dont want to make them public anytime later you may enable the Enforce public access prevention on this bucket option. Create Storage Service Account Next go to IAM Admin Service Accounts console. cloud. google. comiamadminserviceaccountscreate and create a new service account. Give your service account a name and select the Storage Admin role. You may also want to add the Service Account Token Creator role to the service account as this is required to create signed URLs for the files you upload to Google Cloud Storage. From the list of service accounts click the one you created in the previous step. Go to the Keys tab and click on Add Key Create New Key and select the JSON option. This will download a JSON file containing the service account credentials. You will need these credentials to upload files to Google Cloud Storage. Write Google Apps Script Code Go to script. new to create a new Google Apps Script project. Click on Libraries and add the OAuth2 library 1B7FSrk5Zi6L1rSxxTDgDEUsPzlukDsi4KGuTMorsTQHhGBzBkMun4iDF to your project. Next add a new file service. js and use the values of privatekey and clientemail from your service account JSON file to create a new OAuth2 service. service. js Replace these with your own values const serviceaccount privatekey BEGIN PRIVATE KEYn51CjpLsH8AnEND PRIVATE KEYn clientemail uploadstoragelabnol. iam. gserviceaccount. com const getStorageService OAuth2. createServiceFirestoreStorage. setPrivateKeyserviceaccount. privatekey. setIssuerserviceaccount. clientemail. setPropertyStorePropertiesService. getUserProperties. setCacheCacheService. getUserCache. setTokenUrlhttpsoauth2. googleapis. comtoken. setScopehttpswww. googleapis. comauthdevstorage. readwrite Upload Files to Google Cloud Storage Next well write the upload function in Apps Script. The function takes the file ID of the file you want to upload to Google Cloud Storage the name of the bucket and the path where you want to store the file. The function uses the getStorageService function from the previous step to create a new OAuth2 service. The getAccessToken method of the OAuth2 service is used to get the access token required to upload files to Google Cloud Storage. Replace these with your own values const DRIVEFILEID abc123 const STORAGEBUCKET labnol. appspot. com const FILEPATH parentFoldersubFolder const uploadFileToCloudStorage const file DriveApp. getFileByIdDRIVEFILEID const blob file. getBlob const bytes blob. getBytes const API httpswww. googleapis. comuploadstoragev1b const location encodeURIComponentFILEPATHfile. getName const url APISTORAGEBUCKETouploadTypemedianamelocation const service getStorageService const accessToken service. getAccessToken const response UrlFetchApp. fetchurl method POST contentLength bytes. length contentType blob. getContentType payload bytes headers Authorization Bearer accessToken const result JSON. parseresponse. getContentText Logger. logJSON. stringifyresult null 2 Also see File Upload Forms for Google Drive Amit Agarwal Google Developer Expert Google Cloud Champion Amit Agarwal is a Google Developer Expert in Google Workspace and Google Apps Script. He holds an engineering degree in Computer Science I. I. T. and is the first professional blogger in India. Amit has developed several popular Google addons including Mail Merge for Gmail and Document Studio. Read more on Lifehacker and YourStory,2022-12-31T18:30:00Z,"

                            Save 97% off the 2023 Solidity & Flutter Developer Bundle
                            
",Extremely Negative,210,"['Scratch', 'limited']",[],"[Rahul, Agarwal, Rahul, Agarwal]"
