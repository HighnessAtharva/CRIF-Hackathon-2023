Article,Title,Description,URL,Content,Published
0,Get a Special Deal on This Top Python Bundle,Make 2023 the year you finally start to code.,https://www.entrepreneur.com/science-technology/get-a-special-deal-on-this-top-python-bundle/441891,Get a Special Deal on This Top Python Bundle Make 2023 the year you finally start to code. Entrepreneurcontributors are their own. In the digital world there are many good reasons to learn to code. That goes double for entrepreneurs carving out their own place in the world. In addition learning to code can help you make many technical ideas a reality save you copious amounts of time and guide your way as you scale. And if you want to learn to code theres no better place to start than with Python. During our Same You New Job promotion you can save a bundle on The Premium Python Certification Bootcamp Bundle. This 13course bundle typically costs over 2000 but you can get it at 98 off if you grab it by 1159 p. m. Pacific on January 9th. The massive bundle is filled with courses from some of the webs top instructors from Dr. Chris Mall 4. 65star instructor rating to ZENVA Academy 4. 45star rating. So even if youve never seen a line of code before youll be able to build a foundation in Python that will help you graduate into other languages. After all Python is the top coding language that most professionals recommend you start with. Starting out youll learn the basics of computer programming as you explore topics like arithmetic operators strings lists and more. Youll make your first statement utilize variables and operators manage data with lists tuples ranges and dictionaries control program flow with conditionals and loops and more. Eventually youll work your way up to using Python Django for web development and explore several other Python applications including machine learning data science ethical hacking image processing and beyond. Make 2023 the year you learn to code. Enroll by January 9th to get The Premium Python Certification Bootcamp Bundle for only 29. 99. Prices subject to change. Entrepreneur Editors Picks These Are the Hottest Franchises to Watch in 2023 This One Question Will Make You a Better Thinker. Are You Asking It Already How the CEO of Zoom Room Is Leading the Way in Dog Training and Education Before Pressing the Layoff Button Leaders Need to Ask Themselves 1 Question Then Do These 3 Things 3 Simple Strategies for Coping With Overwork Pressure Taco Bell Uses This LittleKnown Secret to Stay on Top Year After Year Once a Skeptic Elon Musk Now Embraces This Divisive Workplace Policy and You Should Too.,2023-01-04T17:00:00Z
1,"TIOBE Calculates C++, C, and Python Rose the Most in Popularity in 2022","""The Tiobe index gauges language popularity using a formula that assesses searches on programming languages in Google, Bing, Yahoo, Wikipedia, and other search engines,"" writes InfoWorld. And they add that this year the ""vaunted"" C++ programming language was …",https://developers.slashdot.org/story/23/01/08/0252232/tiobe-calculates-c-c-and-python-rose-the-most-in-popularity-in-2022,TIOBE Calculates C C and Python Rose the Most in Popularity in 2022 infoworld. com 83 TIOBEs announcement includes their calculation that C rose 4. 62 in popularity in 2022 Runners up are C 3. 82 and Python 2. 78. Interestingly C surpassed Java to become the number 3 of the TIOBE index in November 2022. The reason for Cs popularity is its excellent performance while being a high level objectoriented language. Because of this it is possible to develop fast and vast software systems over millions of lines of code in C without necessarily ending up in a maintenance nightmare. So which programming languages are most popular now For what its worth heres TIOBEs latest ranking Python C C Java C Visual Basic JavaScript SQL Assembly Language PHP InfoWorld adds that Helping C popularity was the publication of new language standards with interesting features such as C 11 and C 20. More from TIOBE What else happened in 2022 Performance seemed to be important. C competitor Rust entered the top 20 again being at position 26 one year ago but this time it seems to be for real. Lua which is known for its easy interfacing with C jumped from position 30 to 24. F is another language that made an interesting move from position 74 to position 33 in one years time. Promising languages such as Kotlin from 29 to 25 Julia from 28 to 29 and Dart from 37 to 38 still have a long way to go before they reach the top 20. Lets see what happens in 2023.,2023-01-08T08:34:00Z
2,A Guide To Command-Line Data Manipulation,"No more random scripts in Python and JavaScript to transform CSV or JSON data. In this article, Alvin Bryan shows you how to use Miller, a small and powerful CLI tool, to do all your data processing.",https://www.smashingmagazine.com/2022/12/guide-command-line-data-manipulation-cli-miller/,A Guide To CommandLine Data Manipulation Allow me to preface this article by saying that Im not a terminal person. I dont use Vim. I find sed grep and awk convoluted and counterintuitive. I prefer seeing my files in a nice UI. Despite all that I got into the habit of reaching for commandline interfaces CLIs when I had small dedicated tasks to complete. Why Ill explain all of that below. In this article youll also learn how to use a CLI tool named Miller to manipulate data from CSV TSV andor JSON files. Why Use The Command Line Everything that Im showing here can be done with regular code. You can load the file parse the CSV data and then transform it using regular JavaScript Python or any other language. But there are a few reasons why I reach out for commandline interfaces CLIs whenever I need to transform data Easier to read. It is faster for me to write a script in JavaScript or Python for my usual data processing. But a script can be confusing to come back to. In my experience commandline manipulations are harder to write initially but easier to read afterward. Easier to reproduce. Thanks to package managers like Homebrew CLIs are much easier to install than they used to be. No need to figure out the correct version of Node. js or Python the package manager takes care of that for you. Ages well. Compared to modern programming languages CLIs are old. They change a lot more slowly than languages and frameworks. What Is Miller The main reason I love Miller is that its a standalone tool. There are many great tools for data manipulation but every other tool I found was part of a specific ecosystem. The tools written in Python required knowing how to use pip and virtual environments for those written in Rust it was cargo and so on. On top of that its fast. The data files are streamed not held in memory which means that you can perform operations on large files without freezing your computer. As a bonus Miller is actively maintained John Kerl really keeps on top of PRs and issues. As a developer I always get a satisfying feeling when I see a neat and maintained opensource project with great documentation. Installation Linux aptget install milleror Homebrew. macOS brew install millerusing Homebrew. Windows choco install millerusing Chocolatey. Thats it and you should now have the mlr command available in your terminal. Run mlr help topics to see if it worked. This will give you instructions to navigate the builtin documentation. You shouldnt need it though thats what this tutorial is for How mlr Works Miller commands work the following way mlr inputoutput file formats verbs file Example mlr csv filter color red example. csv Lets deconstruct csvspecifies the input file format. Its a CSV file. filteris what were doing on the file called a verb in the documentation. In this case were filtering every row that doesnt have the field colorset to red. There are many other verbs like sortand cutthat well explore later. example. csvis the file that were manipulating. Operations Overview We can use those verbs to run specific operations on your data. Theres a lot we can do. Lets explore. Data Ill be using a dataset of IMDb ratings for American TV dramas created by The Economist. You can download it here or find it in the repo for this article. Note For the sake of brevity Ive renamed the file from mlr csv head. IMDbEconomisttvratings. csv to tvratings. csv. Above I mentioned that every command contains a specific operation or verb. Lets learn our first one called head. What it does is show you the beginning of the file the head rather than print the entire file in the console. You can run the following command mlr csv head. tvratings. csv And this is the output youll see titleIdseasonNumbertitledateavratingsharegenres tt2879552111. 22. 63201603108. 4890. 51DramaMysterySciFi tt3148266112 Monkeys201502278. 34070. 46AdventureDramaMystery tt3148266212 Monkeys201605308. 81960. 25AdventureDramaMystery tt3148266312 Monkeys201705199. 03690. 19AdventureDramaMystery tt3148266412 Monkeys201806269. 13630. 38AdventureDramaMystery tt1837492113 Reasons Why201703318. 4372. 38DramaMystery tt1837492213 Reasons Why201805187. 50892. 19DramaMystery tt0285331124200202168. 56416. 67ActionCrimeDrama tt0285331224200302098. 70287. 13ActionCrimeDrama tt0285331324200402098. 71735. 88ActionCrimeDrama This is a bit hard to read so lets make it easier on the eye by adding opprint. mlr csv opprint head. tvratings. csv The resulting output will be the following titleId seasonNumber title date avrating share genres tt2879552 1 11. 22. 63 20160310 8. 489 0. 51 DramaMysterySciFi tt3148266 1 12 Monkeys 20150227 8. 3407 0. 46 AdventureDramaMystery tt3148266 2 12 Monkeys 20160530 8. 8196 0. 25 AdventureDramaMystery tt3148266 3 12 Monkeys 20170519 9. 0369 0. 19 AdventureDramaMystery tt3148266 4 12 Monkeys 20180626 9. 1363 0. 38 AdventureDramaMystery tt1837492 1 13 Reasons Why 20170331 8. 437 2. 38 DramaMystery tt1837492 2 13 Reasons Why 20180518 7. 5089 2. 19 DramaMystery tt0285331 1 24 20020216 8. 5641 6. 67 ActionCrimeDrama tt0285331 2 24 20030209 8. 7028 7. 13 ActionCrimeDrama tt0285331 3 24 20040209 8. 7173 5. 88 ActionCrimeDrama Much better isnt it Note Rather than typing csv opprint every time we can use the c2p option which is a shortcut. Chaining Thats where the fun begins. Rather than run multiple commands we can chain the verbs together by using the then keyword. Remove columns You can see that theres a titleId column that isnt very useful. Lets get rid of it using the cut verb. mlr c2p cut x f titleId then head. tvratings. csv It gives you the following output seasonNumber title date avrating share genres 1 11. 22. 63 20160310 8. 489 0. 51 DramaMysterySciFi 1 12 Monkeys 20150227 8. 3407 0. 46 AdventureDramaMystery 2 12 Monkeys 20160530 8. 8196 0. 25 AdventureDramaMystery 3 12 Monkeys 20170519 9. 0369 0. 19 AdventureDramaMystery 4 12 Monkeys 20180626 9. 1363 0. 38 AdventureDramaMystery 1 13 Reasons Why 20170331 8. 437 2. 38 DramaMystery 2 13 Reasons Why 20180518 7. 5089 2. 19 DramaMystery 1 24 20020216 8. 5641 6. 67 ActionCrimeDrama 2 24 20030209 8. 7028 7. 13 ActionCrimeDrama 3 24 20040209 8. 7173 5. 88 ActionCrimeDrama Fun Fact This is how I first learned about Miller I was playing with a CSV dataset for httpsdetails. town that had a useless column and I looked up how to remove a column from CSV command line. I discovered Miller loved it and then pitched an article to Smashing magazine. Now here we are Filter This is the verb that I first showed earlier. We can remove all the rows that dont match a specific expression letting us clean our data with only a few characters. If we only want the rating of the first seasons of every series in the dataset this is how you do it mlr c2p filter seasonNumber 1 then head. tvratings. csv Sorting We can sort our data based on a specific column like it would be in a UI like Excel or macOS Numbers. Heres how you would sort your data based on the series with the highest rating mlr c2p sort nr avrating then head. tvratings. csv The resulting output will be the following titleId seasonNumber title date avrating share genres tt0098887 1 Parenthood 19901113 9. 6824 1. 68 ComedyDrama tt0106028 6 Homicide Life on the Street 19971205 9. 6 0. 13 CrimeDramaMystery tt0108968 5 Touched by an Angel 19981115 9. 6 0. 08 DramaFamilyFantasy tt0903747 5 Breaking Bad 20130220 9. 554 18. 95 CrimeDramaThriller tt0944947 6 Game of Thrones 20160525 9. 4943 15. 18 ActionAdventureDrama tt3398228 5 BoJack Horseman 20180914 9. 4738 0. 45 AnimationComedyDrama tt0103352 3 Are You Afraid of the Dark 19940223 9. 4349 2. 6 DramaFamilyFantasy tt0944947 4 Game of Thrones 20140509 9. 4282 11. 07 ActionAdventureDrama tt0976014 4 Greek 20110307 9. 4 0. 01 ComedyDrama tt0090466 4 L. A. Law 19900405 9. 4 0. 1 Drama We can see that Parenthood from 1990 has the highest rating on IMDb who knew Saving Our Operations By default Miller only prints your processed data to the console. If we want to save it to another CSV file we can use the operator. If we wanted to save our sorted data to a new CSV file this is what the command would look like mlr csv sort nr avrating. tvratings. csv sorted. csv Convert CSV To JSON Most of the time you dont use CSV data directly in your application. You convert it to a format that is easier to read or doesnt require additional dependencies like JSON. Miller gives you the c2j option to convert your data from CSV to JSON. Heres how to do this for our sorted data mlr c2j sort nr avrating. tvratings. csv sorted. json Case study Top 5 Athletes With Highest Number Of Medals In Rio 2016 Lets apply everything we learned above to a realworld use case. Lets say that you have a detailed dataset of every athlete who participated in the 2016 Olympic games in Rio and you want to know who the 5 with the highest number of medals are. First download the athlete data as a CSV then save it in a file named athletes. csv. Lets open up the following file mlr c2p head. athletes. csv The resulting output will be something like the following id name nationality sex dateofbirth height weight sport gold silver bronze info 736041664 A Jesus Garcia ESP male 19691017 1. 72 64 athletics 0 0 0 532037425 A Lam Shin KOR female 19860923 1. 68 56 fencing 0 0 0 435962603 Aaron Brown CAN male 19920527 1. 98 79 athletics 0 0 1 521041435 Aaron Cook MDA male 19910102 1. 83 80 taekwondo 0 0 0 33922579 Aaron Gate NZL male 19901126 1. 81 71 cycling 0 0 0 173071782 Aaron Royle AUS male 19900126 1. 80 67 triathlon 0 0 0 266237702 Aaron Russell USA male 19930604 2. 05 98 volleyball 0 0 1 382571888 Aaron Younger AUS male 19910925 1. 93 100 aquatics 0 0 0 87689776 Aauri Lorena Bokesa ESP female 19881214 1. 80 62 athletics 0 0 0 Optional Clean Up The File The CSV file has a few fields we dont need. Lets clean it up by removing the info id weight and dateofbirth columns. mlr csv I cut x f idinfoweightdateofbirth athletes. csv Now we can move to our original problem we want to find who won the highest number of medals. We have how many of each medal bronze silver and gold the athletes won but not the total number of medals per athlete. Lets compute a new value called medals which corresponds to this total number bronze silver and gold added together. mlr c2p put medalsbronzesilvergold then head. athletes. csv It gives you the following output name nationality sex height sport gold silver bronze medals A Jesus Garcia ESP male 1. 72 athletics 0 0 0 0 A Lam Shin KOR female 1. 68 fencing 0 0 0 0 Aaron Brown CAN male 1. 98 athletics 0 0 1 1 Aaron Cook MDA male 1. 83 taekwondo 0 0 0 0 Aaron Gate NZL male 1. 81 cycling 0 0 0 0 Aaron Royle AUS male 1. 80 triathlon 0 0 0 0 Aaron Russell USA male 2. 05 volleyball 0 0 1 1 Aaron Younger AUS male 1. 93 aquatics 0 0 0 0 Aauri Lorena Bokesa ESP female 1. 80 athletics 0 0 0 0 Ababel Yeshaneh ETH female 1. 65 athletics 0 0 0 0 Sort by the highest number of medals by adding a sort. mlr c2p put medalsbronzesilvergold then sort nr medals then head. athletes. csv Respectively the resulting output will be the following name nationality sex height sport gold silver bronze medals Michael Phelps USA male 1. 94 aquatics 5 1 0 6 Katie Ledecky USA female 1. 83 aquatics 4 1 0 5 Simone Biles USA female 1. 45 gymnastics 4 0 1 5 Emma McKeon AUS female 1. 80 aquatics 1 2 1 4 Katinka Hosszu HUN female 1. 75 aquatics 3 1 0 4 Madeline Dirado USA female 1. 76 aquatics 2 1 1 4 Nathan Adrian USA male 1. 99 aquatics 2 0 2 4 Penny Oleksiak CAN female 1. 86 aquatics 1 1 2 4 Simone Manuel USA female 1. 78 aquatics 2 2 0 4 Alexandra Raisman USA female 1. 58 gymnastics 1 2 0 3 Restrict to the top 5 by adding n 5 to your head operation. mlr c2p put medalsbronzesilvergold then sort nr medals then head n 5. athletes. csv You will end up with the following file name nationality sex height sport gold silver bronze medals Michael Phelps USA male 1. 94 aquatics 5 1 0 6 Katie Ledecky USA female 1. 83 aquatics 4 1 0 5 Simone Biles USA female 1. 45 gymnastics 4 0 1 5 Emma McKeon AUS female 1. 80 aquatics 1 2 1 4 Katinka Hosszu HUN female 1. 75 aquatics 3 1 0 4 As a final step lets convert this into a JSON file with the c2j option. Here is our final command mlr c2j put medalsbronzesilvergold then sort nr medals then head n 5. athletes. csv top5. json With a single command weve computed new data sorted the result truncated it and converted it to JSON. name Michael Phelps nationality USA sex male height 1. 94 weight 90 sport aquatics gold 5 silver 1 bronze 0 medals 6 Other entries omitted for brevity. Bonus If you wanted to show the top 5 women you could add a filter. mlr c2p put medalsbronzesilvergold then sort nr medals then filter sex female then head n 5. athletes. csv Respectively you would end up with the following output name nationality sex height sport gold silver bronze medals Katie Ledecky USA female 1. 83 aquatics 4 1 0 5 Simone Biles USA female 1. 45 gymnastics 4 0 1 5 Emma McKeon AUS female 1. 80 aquatics 1 2 1 4 Katinka Hosszu HUN female 1. 75 aquatics 3 1 0 4 Madeline Dirado USA female 1. 76 aquatics 2 1 1 4 Conclusion I hope this article showed you how versatile Miller is and gave you a taste of the power of commandline tools. Feel free to scourge the internet for the best CLI next time you find yourself writing yet another random script. Resources Miller Dataset of IMDb ratings for American TV dramas Further Reading on Smashing Magazine Powerful Terminal And CommandLine CLI Tools For Modern Web Development How Should Designers Learn To Code The Terminal And Text Editors Part 1 How To Develop An Interactive Command Line Application Using Node. js A Deep Dive Into Serverless UI With TypeScript,2022-12-27T11:00:00Z
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
